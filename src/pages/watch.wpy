 <style lang="less">
.scroll {
  width: 100%;
  height: 100%;
}
.inner {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 200rpx;
}
.area-uppper {
  height: 450rpx;
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upper-navigator {
  margin-top: 100rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  justify-content: space-around;
}
.upper-item {
  width: 375rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .label {
    margin-top: 20rpx;
    font-size: 16px;
    color: white;
    font-family: '黑体';
  }
}
.selected {
  .icon {
    background-color: red;
  }
  .label {
    color: red;
  }
}

.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.asset-block {
  width: 695rpx;
  display: block;
  flex-direction: column;
  border-radius: 5px;
  margin-top: 32rpx;
  margin-bottom: 18rpx;
  background-color: white;
  justify-content: center;
}

.content {
  width: 695rpx;
  height: 182rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  background-color: white;
  border-radius: 5px;
  margin: 32rpx 0 13rpx 0;
  background-color: white;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
}
.content-icon {
  width: 80rpx;
  height: 80rpx;
  margin-left: 32rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  image {
    width: 80rpx;
    height: 80rpx;
    background-color: white;
    border-radius: 50%;
  }
}
.content-middle {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  .asset {
    font-family: Arial, Helvetica, sans-serif;
    color: #a3a3a3;
    font-size: 15px;
  }
  .price {
    font-family: Arial, Helvetica, sans-serif;
    color: #a3a3a3;
    font-size: 15px;
  }
}
.content-total {
  width: 200rpx;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  text {
    color: #27adf1;
    font-size: 13px;
    font-family: Helvetica, Arial, sans-serif;
  }
}

.history-block {
  width: 695rpx;
  display: block;
  flex-direction: column;
  border-radius: 5px;
  margin-top: 32rpx;
  margin-bottom: 18rpx;
  background-color: white;
  justify-content: center;
}

.tx-content {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
//头部
.area-head {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  width: 625rpx;
  margin: 30rpx 0 0 0;
  .label {
    font-size: 17px;
    font-family: '黑体';
    color: #a3a3a3;
  }
  .time {
    font-size: 14px;
    font-family: '黑体';
    color: #a3a3a3;
  }
}
//交易ID
.area-txid {
  display: flex;
  flex-direction: column;
  width: 625rpx;
  height: wrap;
  border-bottom: thin rgb(230, 230, 230) solid;
  .txid {
    display: block;
    word-break: break-all;
    font-size: 15px;
    color: #a3a3a3;
    margin: 34rpx 0 30rpx 0;
  }
}
//确认高度
.area-confirm {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  margin: 20rpx 20rpx 20rpx 20rpx;
  width: 625rpx;
  .label {
    font-size: 16px;
    color: #69c0fd;
    font-family: '黑体';
  }
  .count {
    font-size: 16px;
    padding-right: 5px;
    color: #69c0fd;
  }
}

.manage-btn {
  margin-top: 100rpx;
  width: 80%;
  font-size: 16px;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
  button::after {
    border: none;
  }
}
</style>
<template>
  <view class="container">
      <scroll-view scroll-y class="scroll">
         <view class="inner">
    <view class="area-uppper">
      <view class="upper-navigator">
          <view class="upper-item {{selected==0?'selected':''}}"  @tap="navigate('account')">
            <image src="../images/address.png" class="icon"></image>
            <text class="label">账户概览</text>
          </view>
          <view class="upper-item {{selected==1?'selected':''}}"  @tap="navigate('history')" >
            <image src="../images/address.png" class="icon"></image>
            <text class="label">交易历史</text>
          </view>
          <view class="upper-item {{selected==2?'selected':''}}"  @tap="navigate('manager')">
            <image src="../images/address.png" class="icon"></image>
            <text class="label">账户管理</text>
          </view>
      </view>
    </view>
    <view class="area-lower">
      <view wx:if="{{selected==0}}">
        <view class="asset-block" wx:for="{{assets}}" >
          <view class="content">
            <view class="content-icon">
              <image src="../images/neo.jpg" class="content-icon"></image>
            </view>
            <view class="content-middle">
              <text class="asset">{{item.amount+" "+item.type}}</text>
              <text class="price" style="color:{{item.rise?'#45d68a':'#f67581'}};">{{item.price}}￥</text>
            </view>
            <view class="content-total">
              <text >{{item.total}}￥</text>
            </view>
          </view>
        </view>
      </view>
      <view wx:elif="{{selected==1}}"> 
        <view class="history-block" wx:for="{{TXs}}" >
          <view class="tx-content">
            <view class="area-head">
              <text class="label">交易编号</text>
              <text class="time">{{item.blocktime['$date']}}</text>
            </view>
            <view class ="area-txid" @tap="OnDetail({{item.txid}})">
              <text class="txid">{{item.txid}}</text>
            </view>
            <view class="area-confirm">
              <text class="label"> 确认高度：</text>
              <text class="count">{{item.blockindex}}</text>
            </view>
          </view>
        </view>
      </view>
      <view wx:else>
        <view class="area-btn">
          <button type="primary" style="background-color:#69c0fd;" @tap="manage('normal')">正常登陆模式</button>
        </view>
        <view class="area-btn">
          <button type="primary" style="background-color:#69c0fd;" @tap="manage('switch')">切换观察账户</button>
        </view>
        <view class="area-btn">
          <button type="primary" style="background-color:#69c0fd;" @tap="manage('delete')">删除当前账户</button>
        </view>
      </view>
    </view>
        </view>
  </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { WWW } from '../utils/API';
import { CoinTool } from '../utils/Coin';
import { UTXO } from '../utils/UTXO';
import { Wallet } from '../utils/wallet';
import tip from '../utils/tip';
import * as TimeHelper from '../utils/time';
export default class Watch extends wepy.page {
  config = {
    navigationBarTitleText: '观察账户'
  };

  components = {};

  data = {
    selected: 0,
    assets: {},
    address: '',
    TXs: [],
    isLoading: false,
    page: 1
  };

  computed = {};

  methods = {
    async manage(param) {
      let that = this;
      switch (param) {
        case 'normal':
          wepy.reLaunch({
            url: '/pages/index?switch=' + false
          });
          break;
        case 'switch':
          wepy.navigateTo({ url: '/pages/watchonly' });
          break;
        case 'delete':
          wepy.showLoading('账户删除中');
          let res = await WWW.addr_delete(Wallet.openid, that.address);
          wepy.hideLoading();
          if (res['code'] == 0) {
            tip.success('删除成功');
            setTimeout(function() {
              wepy.reLaunch({
                url: '/pages/index?switch=' + false
              });
            }, 500);
          } else tip.error('删除失败');

          break;
        default:
          break;
      }
      that.$apply();
    },
    navigate(param) {
      let that = this;
      switch (param) {
        case 'account':
          that.selected = 0;
          break;
        case 'history':
          that.selected = 1;
          that.OnGetTXs();
          break;
        case 'manager':
          that.selected = 2;
          break;
        default:
          break;
      }
      that.$apply();
    }
  };

  events = {};

  onLoad(option) {
    this.address = option.address;
    this.$apply();
  }
  async onShow() {
    let that = this;
    await this.OnTimeOut();
    //循环执行代码
    setInterval(async () => {
      await that.OnTimeOut();
    }, 15000); //循环时间 这里是15秒
  }

  /**
   * 定时触发
   */
  async OnTimeOut() {
    let that = this;
    if (this.selected == 0) {
      this.OnGetAssets(this.address);
    } else if (this.selected === 1) {
      that.OnGetTXs();
    }

    this.OnGetHeight();
  }

  /**
   * 加载区块链高度
   */
  async OnGetHeight() {
    const height = await WWW.api_getHeight();
    Wallet.height = height;
  }
  /**
   * 获取账户资产信息 UTXO
   */
  async OnGetAssets(addr) {
    let that = this;
    let temp_assets = {};
    await UTXO.GetAssets(addr);
    for (let item of UTXO.utxo) {
      if (temp_assets[item.asset] === undefined)
        temp_assets[item.asset] = {
          amount: 0,
          price: 0,
          total: 0,
          type: item.asset
        };
      if (item.asset === 'NEO')
        temp_assets[item.asset].amount += parseInt(item.count);
      else temp_assets[item.asset].amount += parseFloat(item.count);
    }
    that.OnGetPrice(temp_assets);
  }
  /**
   * 获取市场价格
   */
  async OnGetPrice(temp_assets) {
    let that = this;
    this.isLoading = true;
    for (let key in that.assets) {
      const coin = await WWW.api_getCoinPrice(key);
      temp_assets[key].price = parseFloat(coin[0]['price_cny']).toFixed(2);
      temp_assets[key].total =
        parseFloat(temp_assets[key].amount) *
        parseFloat(coin[0]['price_cny']).toFixed(2);
      temp_assets[key].total = temp_assets[key].total.toFixed(2);
      if (coin[0]['percent_change_1h'][0] !== '-') temp_assets[key].rise = true;
      else temp_assets[key].rise = false;
    }
    that.assets = temp_assets;
    that.$apply();
    UTXO.utxo.reverse();
  }
  async OnGetTXs() {
    const txs = await WWW.rpc_getAddressTXs(this.address, 20, this.page);
    console.log(txs);

    this.isLoading = false;
    for (let index in txs) {
      const date = txs[index].blocktime['$date'];
      txs[index].blocktime['$date'] = TimeHelper.formatTime(
        date,
        'Y/M/D h:m:s'
      );
      const bindex = txs[index].blockindex;
      txs[index].blockindex =
        parseInt(Wallet.height) - parseInt(txs[index].blockindex) + 1;
    }
    console.log(txs);

    this.TXs = txs;
    this.$apply();
    console.log(this.TXs);
    // complete
    wx.hideNavigationBarLoading(); //完成停止加载
    wx.stopPullDownRefresh(); //停止下拉刷新
  }

  /**
   * Pull up refresh
   */
  async onReachBottom() {
    let that = this;
    if (that.isLoading) return;
    that.OnLoadTXs();
    that.page = parseInt(that.page) + 1;
    that.$apply();
  }
  onShareAppMessage() {
    let that = this;
    return {
      title: '观察账户',
      desc: that.address,
      path: '/pages/watch?address='+that.address
    };
  }
}
</script>
 