 <style lang="less">
.area-uppper {
  height: 450rpx;
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upper-navigator {
  margin-top: 100rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  justify-content: space-around;
}
.upper-item {
  width: 375rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .label {
    margin-top: 20rpx;
    font-size: 16px;
    color: white;
    font-family: '黑体';
  }
}
.selected {
  .icon {
    background-color: red;
  }
  .label {
    color: red;
  }
}
.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.asset-block {
  width: 695rpx;
  display: block;
  flex-direction: column;
  border-radius: 5px;
  margin-top: 32rpx;
  margin-bottom: 18rpx;
  background-color: white;
  justify-content: center;
}

.content {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}
.content-icon {
  width: 100rpx;
  height: 100rpx;
}
.content-middle {
}
.content-total {
}
</style>
<template>
  <view class="container">
    <view class="area-uppper">
      <view class="upper-navigator">
          <view class="upper-item {{selected==0?'selected':''}}"  @tap="navigate('account')">
            <image src="../images/address.png" class="icon"></image>
            <text class="label">账户概览</text>
          </view>
          <view class="upper-item {{selected==1?'selected':''}}"  @tap="navigate('history')" >
            <image src="../images/address.png" class="icon"></image>
            <text class="label">交易历史</text>
          </view>
          <view class="upper-item {{selected==2?'selected':''}}"  @tap="navigate('manager')">
            <image src="../images/address.png" class="icon"></image>
            <text class="label">账户管理</text>
          </view>
      </view>
    </view>
    <view class="area-lower">
      <view wx:if="{{selected==0}}">
        <view class="asset-block" wx:for="{{TXs}}">
          <view class="content">
<image src="../images/neo.jpg" class="content-icon"></image>
          </view>
        </view>
      </view>
      <view wx:elif="{{selected==1}}"> 2 </view>
      <view wx:else> 3 </view>
    </view>
  </view>

</template>

<script>
import wepy from 'wepy';
import { CURR_WALLET } from '../utils/constant';
import { WWW } from '../utils/API';
import { CoinTool } from '../utils/Coin';
import { UTXO } from '../utils/UTXO';
import { Wallet } from '../utils/wallet';
import tip from '../utils/tip';
export default class Watch extends wepy.page {
  config = {
    navigationBarTitleText: '首页'
  };

  components = {};

  data = {
    selected: 0
  };

  computed = {};

  methods = {
    navigate(e) {
      let that = this;
      switch (e) {
        case 'account':
          that.selected = 0;
          break;
        case 'history':
          that.selected = 1;
          break;
        case 'manager':
          that.selected = 2;
          break;
        default:
          break;
      }
      that.$apply();
    }
  };

  events = {};

  async onLoad() {}
  onShow() {
    this.OnGetPrice();
    this.OnLogin();
    CoinTool.initAllAsset();
  }
  async OnLogin() {
    let that = this;
    const wallet = wepy.getStorageSync(CURR_WALLET) || {};
    console.log(Object.keys(wallet).length);

    //本地缓存有账户 则直接加载本地账户信息
    if (Object.keys(wallet).length !== 0) {
      this.isLogin = true;
      this.$apply();
      Wallet.setWallet(wallet);
    }
    await this.OnTimeOut();
    //循环执行代码
    setInterval(async () => {
      await that.OnTimeOut();
    }, 15000); //循环时间 这里是15秒
  }
  /**
   * 定时触发
   */
  async OnTimeOut() {
    if (WWW.rpc === '') {
      WWW.rpc = await WWW.rpc_getURL();
    }
    if (Wallet.account !== null) {
      const addr = Wallet.account.address;
      this.OnGetAssets(addr);
    }
    this.OnGetHeight();
  }

  /**
   * 加载区块链高度
   */
  async OnGetHeight() {
    const height = await WWW.api_getHeight();
    // console.log(height);
    this.Block = height;
    Wallet.height = height;
    this.$apply();
  }
  /**
   * 获取账户资产信息 UTXO
   */
  async OnGetAssets(addr) {
    // console.log(addr);
    await UTXO.GetAssets(addr);
    let neo = 0;
    let gas = 0;

    for (let item of UTXO.utxo) {
      if (item.asset === 'NEO') neo = parseInt(item.count) + parseInt(neo);
      else gas = parseFloat(item.count) + parseFloat(gas);
    }

    this.NEO = neo;
    this.GAS = gas.toFixed(4);
    this.$apply();
    UTXO.balance = {
      NEO: neo,
      GAS: gas
    };
    UTXO.utxo.reverse();

    // console.log(UTXO.assets);
    this.OnTotalValue();
  }
  /**
   * 获取市场价格
   */
  async OnGetPrice() {
    const coins = await WWW.api_getCoinPrice();
    console.log(coins);
    this.NEOPrice = parseFloat(coins['NEO'][0]['price_cny']).toFixed(2);
    this.GASPrice = parseFloat(coins['GAS'][0]['price_cny']).toFixed(2);
    this.BitCoinPrice = parseFloat(coins['BitCoin'][0]['price_cny']).toFixed(2);
    let priceChange = {};
    if (coins['NEO'][0]['percent_change_1h'][0] !== '-') this.PN = true;
    else this.PN = false;

    if (coins['GAS'][0]['percent_change_1h'][0] !== '-') this.PG = true;
    else this.PG = false;

    if (coins['BitCoin'][0]['percent_change_1h'][0] !== '-') this.PB = true;
    else this.PB = false;
    this.$apply();
    this.OnTotalValue();
  }
  /**
   * 计算等价法币资产
   */
  OnTotalValue() {
    let gasAsset = parseFloat(this.GASPrice) * parseFloat(this.GAS);
    let neoAsset = parseFloat(this.NEOPrice) * parseFloat(this.NEO);
    this.NEOValue = neoAsset.toFixed(2);
    this.GASValue = gasAsset.toFixed(2);
    this.$apply();
    // console.log(neoAsset.toFixed(2));
  }
}
</script>
 