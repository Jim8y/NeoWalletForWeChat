<style lang="less">
.area-wif {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  .label {
  }
  .content {
  }
}
</style>

<template>
  <view class="container">
    <view class="area-wif">
      <text class="label">私钥登陆</text>
      <input class="content"type="text" name="wif" placeholder="WIF/privateKey" bindinput="bindInput"/>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import * as NEL from '../lib/neo-ts/index';
import { Wallet } from '../utils/wallet';
import { LOCAL_WALLET, CURR_WALLET } from '../utils/constant';
import tip from '../utils/tip';
export default class LoginWIF extends wepy.page {
  customData = {}; // 自定义数据

  customFunction() {} // 自定义方法

  onLoad() {} // 在Page和Component共用的生命周期函数

  onShow() {
    let wals = wepy.getStorageSync(LOCAL_WALLET) || {};
    console.log(wals);
    let temp_wal = [];
    for (const key in wals) {
      console.log(wals[key]);
      temp_wal.push(wals[key]['accounts'][0]);
    }
    this.wals = wals;
    this.wallets = temp_wal;
    this.$apply();
  } // 只在Page中存在的页面生命周期函数

  config = {}; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

  data = {
    wallets: [],
    wals: {}
  }; // 页面所需数据均需在这里声明，可用于模板数据绑定

  components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件

  mixins = []; // 声明页面所引用的Mixin实例

  computed = {}; // 声明计算属性（详见后文介绍）

  watch = {}; // 声明数据watcher（详见后文介绍）

  methods = {
    async bindInput(e) {
      wepy.showLoading({ title: '密钥验证中' });
      let key = e.detail.value;
      switch (key.length) {
        case 52: //wif
          const prikey = NEL.helper.Helper.GetPrivateKeyFromWIF(key);
          if (prikey.length!==64) {
            wepy.hideLoading();
            tip.alert('密钥格式错误');
            return;
          }
          key = NEL.helper.StringHelper.toHexString(prikey);
        case 64: //privatekey
          Wallet.setPrikey(key);
          wepy.hideLoading();
          await wepy.setStorageSync(CURR_WALLET, Wallet.toString());
          wepy.reLaunch({ url: './home' });
          break;
        default:
          //error input format
           wepy.hideLoading();
           tip.alert('密钥格式错误')
          break;
      }
    }
  }; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

  events = {}; // 声明组件之间的事件处理函数
}
</script>
