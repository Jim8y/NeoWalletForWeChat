<style lang="less">
.bg {
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
}
.area-qrcode {
  display: flex;
  flex-direction: column;
  align-items: center;
  // justify-content: center;
  width: 700rpx; // 750rpx
  height: 715rpx;
  margin-top: 120rpx;
  background-color: white;
  border-radius: 5px;
  box-shadow: 10px 15px 20px rgba(100, 100, 100, 0.3);
}

.note-text {
  margin-top: 50rpx;
  font-size: 16px;
  color: #69c0fd;
}

.qrcode {
  margin-top: 62rpx;
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
  .canvas {
    width: 230px;
    height: 230px;
  }
}

.area-address {
  display: flex;
  flex-direction: column;
  align-items: left;
  margin: 79rpx 15px 20px 27rpx;
  width: 682rpx;
  justify-content: flex-start;
}
.address-label {
  font-size: 16px;
  font-family: Helvetica, Arial, sans-serif;
  color: white;
}
.address-content {
  margin-top: 53rpx;
  font-size: 15px;
  font-family: Helvetica, Arial, sans-serif;
  word-break: break-all;
  color: white;
  margin-left: 20rpx;
  padding-bottom: 5rpx;
  border-bottom: white thin solid;
}
</style>

<template>
  <view class="container bg">
    <view class="area-qrcode">
      <text class="note-text" >点击二维码，复制地址</text>
      <view class="qrcode" @tap="copyToClip({{account.address}})">
        <canvas class="canvas" canvas-id="address"></canvas>
      </view>
    </view>
    <view class="area-address">
      <text class="address-label">地址:</text>
      <text class="address-content">{{account.address}}</text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import drawQrcode from '../lib/qrcode/qr';
import tip from '../utils/tip';
import { CURR_WALLET } from '../utils/constant';
import { Wallet } from '../utils/wallet';
export default class Receive extends wepy.page {
  customData = {}; // 自定义数据

  customFunction() {} // 自定义方法

  onLoad(option) {
    this.account = Wallet.account;
    this.$apply();
    console.log(this.account);
    drawQrcode({
      width: 230,
      height: 230,
      canvasId: 'address',
      text: this.account.address
    });
  } // 在Page和Component共用的生命周期函数

  onShow() {
    wx.showShareMenu({
      withShareTicket: true,
      success: function(res) {
        // 分享成功
        console.log('shareMenu share success');
        console.log('分享' + res);
      },
      fail: function(res) {
        // 分享失败
        console.log(res);
      }
    });
  } // 只在Page中存在的页面生命周期函数

  config = {
    navigationBarTitleText: '收款'
  }; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

  data = {
    account: {}
  }; // 页面所需数据均需在这里声明，可用于模板数据绑定

  components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件

  mixins = []; // 声明页面所引用的Mixin实例

  computed = {}; // 声明计算属性（详见后文介绍）

  watch = {}; // 声明数据watcher（详见后文介绍）

  methods = {
    copyToClip(str) {
      let that = this;
      wepy.setClipboardData({
        data: str,
        success: function(res) {
          wepy.getClipboardData({
            success: function(res) {
              console.log(res.data); // data
              tip.alert('地址复制成功');
            }
          });
        }
      });
    }
  }; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
  onShareAppMessage() {
    return {
      title: 'NEO小程序钱包',
      path: './pages/home',
      success: function(res) {
        console.log(res.shareTickets[0]);
        // console.log
        wx.getShareInfo({
          shareTicket: res.shareTickets[0],
          success: function(res) {
            console.log(res);
          },
          fail: function(res) {
            console.log(res);
          },
          complete: function(res) {
            console.log(res);
          }
        });
      },
      fail: function(res) {
        // 分享失败
        console.log(res);
      }
    };
  }
}
</script>
