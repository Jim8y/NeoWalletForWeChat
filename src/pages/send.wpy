<style lang="less">
.area-uppper {
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.upper-balance{
  margin: 90rpx 0  90rpx 45rpx;
  display: flex;
  flex-direction: row;
}
.balance-label {
  color: white;
  font-size: 20px;
  font-family: Helvetica,Arial , sans-serif;
}
.balance {
  margin-left: 10px;
  font-size: 20px;
  color:white;
  font-family: Helvetica,Arial , sans-serif;
}

.radio-group {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 90rpx 45rpx  90rpx 0;
  .radio {
    margin-left: 45rpx;
    text {
      color: white;
      font-size: 20px;
      font-family: Helvetica,Arial , sans-serif;
    }
  }
}
.area-medium {
  display: flex;
  flex-direction: column;
  margin-top: 30rpx;
  height: 377rpx;
  width: 700rpx;
  box-shadow: 10px 15px 20px rgba(100,100,100,0.2);
  background-color: white;
  align-items: center;
  border-radius: 5px;
}
.medium-address{
  width: 620rpx;
  font-family: Helvetica,Arial , sans-serif;
  margin-top: 100rpx;
  .address{
    border-bottom: thin #cccccc solid;
    height: 57rpx;
    font-size: 18px;
    padding:4px 0 4px 0;
  }
  .holder{
    color:#a3a3a3;
  }
}
.medium-button{
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  width: 620rpx;
  margin-top: 60rpx;
}
.button-item{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .label {
    margin-top: 20rpx;
    font-size: 18px;
    color: #27adf1;
    font-family: Helvetica,Arial , sans-serif;
  }

}
.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-top: 55rpx;
}

.lower-amount{
  width:660rpx;
  height:95rpx;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background-color: white;
  border-radius: 5px;
  align-items: center;
   box-shadow: 2px 2px 20px rgba(130,130,130,0.2);
  .content{
    font-size: 18px;
    padding:0 0 0 45rpx;
  }
  .holder{
    color:#a3a3a3;
  }
}
.lower-passphrase{
  width:660rpx;
  height:95rpx;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background-color: white;
  margin-top: 55rpx;
  border-radius: 5px;
  align-items: center;
   box-shadow: 2px 2px 20px rgba(130,130,130,0.2);
  .content{
    font-size: 18px;
    padding:0 0 0 45rpx;
  }
  .holder{
    color:#a3a3a3;
  }
}
// .area-input {
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   width: 100%;
// }
// .input-addr {
//   margin-top: 20px;
//   display: flex;
//   flex-direction: row;
//   align-items: center;
//   background-color: white;
//   justify-content: space-between;
//   padding: 15px 10px 15px 10px;
//   border-bottom: thin gray solid;
//   width: 96%;
//   .address {
//     flex: 16;
//     font-size: 15px;
//     .placeholder {
//       font-size: 15px;
//     }
//   }
//   .icon {
//     flex: 1;
//     width: 50rpx;
//     height: 50rpx;
//   }
// }

// .area-balance {
//   margin-top: 15px;
//   display: flex;
//   flex-direction: row;
//   justify-content: flex-start;
//   align-items: center;
//   width: 100%;
// }




// .area-count {
//   margin-top: 15px;
//   display: flex;
//   flex-direction: row;
//   justify-content: flex-start;
//   align-items: center;
//   width: 100%;
//   .count {
//     background-color: white;
//     padding: 10px 5px 10px 5px;
//     width: 100%;
//     .amount {
//       font-size: 17px;
//       .placeholder {
//         font-size: 15px;
//       }
//     }
//   }
// }
// .area-pass {
//   display: flex;
//   flex-direction: row;
//   align-items: center;
//   justify-content: flex-start;
//   background-color: white;
//   margin-top: 10px;
//   width: 96%;
//   padding: 15px 10px 15px 10px;
//   border-bottom: thin gray solid;
//   text {
//     font-size: 15px;
//   }
//   .placeholder {
//     font-size: 15px;
//   }
// }
.area-btn {
  margin-top: 100rpx;
  width: 80%;
}
</style>
<template>
  <form bindsubmit="formSubmit" class="form">
    <view class="container">
      <view class="area-uppper">
        <view class="upper-balance">
          <text class="balance-label">Balance:</text>
          <text class="balance">{{balance}}</text>
        </view>
        <radio-group class="radio-group" bindchange="radioChange">
          <label class="radio" wx:for="{{assets}}">
            <radio value="{{item.name}}" checked="{{item.checked}}"/>
            <text>{{item.value}}</text>
          </label>
        </radio-group>
      </view>
      <view class="area-medium">
        <view class="medium-address">
          <input class="address" name="address" placeholder-class="holder" placeholder="Target Address" value='{{targetAddr}}'/>
        </view>
        <view class="medium-button">
          <view class="button-item"  @tap="navigate('receive')">
            <image src="../images/address.png" class="icon"></image>
            <text class="label">Address Pay</text>
          </view>
          <view class="button-item"  @tap="navigate('receive')">
            <image src="../images/scanPay.png" class="icon"></image>
            <text class="label" style="color:#a3a3a3;">Scan Pay</text>
          </view>
        </view>
      </view>
      <view class="area-lower">
        <view class="lower-amount">
          <input name="amount" placeholder="Amount" class="content" placeholder-class="holder" type="{{checked==='GAS'?'digit':'number'}}" value='{{amount}}'/>
        </view>
        <view class="lower-passphrase">
          <input placeholder="Passphrase" class="content" password='true' placeholder-class="holder" name="passphrase"/>
        </view>
      </view>
      <view class="area-btn">
        <button type="primary" formType="submit">确认</button>
      </view>
      <!-- <view class="area-input">
        <view class="input-addr">
          <input class="address" name="address" placeholder-class="placeholder" placeholder="Target Address" value='{{targetAddr}}'/>
          <image src="../images/scan.png" class="icon" @tap="OnScan()"></image>
        </view>
        <view class="area-balance">

        </view>
        <view class="area-count">
          <view class="count">
            <input name="amount" placeholder="Amount" class="amount" placeholder-class="placeholder" type="{{checked==='GAS'?'digit':'number'}}" value='{{amount}}'/>
          </view>
        </view>
      </view>
      <view class="area-pass">
        <input placeholder="Passphrase" password='true' placeholder-class="placeholder" name="passphrase"/>
      </view>
      <view class="area-btn">
        <button type="primary" formType="submit">确认</button>
      </view>  -->
    </view>
  </form>
</template>
<script>
import wepy from 'wepy';
import { UTXO } from '../utils/UTXO';
import { CoinTool } from '../utils/Coin';
import * as NEL from '../lib/neo-ts/index';
import tip from '../utils/tip';
import { TransactionTool } from '../utils/transaction';
import * as Random from '../utils/random';
import { WWW } from '../utils/API';
import { WalletHelper } from '../utils/wallet';
export default class Send extends wepy.page {
  config = {
    navigationBarTitleText: 'Send'
  };

  components = {};

  data = {
    targetAddr: '',
    assets: [
      { name: 'NEO', value: 'NEO' },
      { name: 'GAS', value: 'GAS', checked: 'true' }
    ],
    balance: '0',
    checked: 'GAS',
    amount: '',
    password: ''
  };

  computed = {};

  methods = {
    OnScan() {
      let that = this;
      wepy.scanCode({
        success: res => {
          console.log(res);
          that.targetAddr = res.result;
          that.$apply();
        },
        fail: res => {
          console.log(res);
        }
      });
    },
    radioChange(e) {
      this.checked = e.detail.value;
      this.balance = UTXO.balance[e.detail.value];
      this.amount = '';
      this.$apply();
    },
    async formSubmit(e) {
      let target = e.detail.value.address;
      let amount = e.detail.value.amount;
      let password = e.detail.value.passphrase;
      if (target.length !== 34) {
        tip.alert('目标地址有误');
        return;
      }
      if (parseFloat(amount) > parseFloat(UTXO.balance[this.checked])) {
        tip.alert('余额不足');
        return;
      }
      if (password.length <= 0) {
        tip.alert('请输入密码');
        return;
      }

      this.amount = amount;
      this.hiddenmodalput = false;
      this.password = password;
      this.$apply();
      this.OnSend();
    }
  };

  events = {};

  onLoad() {
    this.balance = UTXO.balance['GAS'];
    this.$apply();
  }
  //构造并发送交易
  async OnSend() {
    let that = this;
    wepy.showLoading({ title: '密码验证中' });
    WalletHelper.decode(
      this.password,
      WalletHelper.wallet,
      async (code, prikey, pubkey) => {
        wepy.hideLoading();
        if (code < 0) {
          tip.error('密码错误');
          return;
        }
        var count = NEL.neo.Fixed8.parse(that.amount + '');
        let coin = that.checked === 'GAS' ? CoinTool.id_GAS : CoinTool.id_NEO;
        wepy.showLoading({ title: '交易生成中' });
        var tran = CoinTool.makeTran(UTXO.assets, that.targetAddr, coin, count);
        // console.log(tran);
        let randomStr = await Random.getSecureRandom(256);
        const txid = await TransactionTool.setTran(
          tran,
          prikey,
          pubkey,
          randomStr
        );
        // console.log(txid);

        wepy.hideLoading();
        if (txid === 'failed') {
          wepy.showModal({
            title: '提示',
            content: '交易发送失败',
            showCancel: false,
            success: async function(res) {
              if (res.confirm) {
                console.log('用户点击确定');
              }
            }
          });
        } else {
          TransactionTool.unconfirm.push(txid);
          wepy.showModal({
            title: '交易发送成功',
            content: txid,
            success: async function(res) {
              if (res.confirm) {
                console.log('用户点击确定');
                wx.navigateBack();
              }
            }
          });
        }
      }
    );
  }
}
</script>
