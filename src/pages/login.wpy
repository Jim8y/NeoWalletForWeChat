<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 150rpx;
  height: 150rpx;
  border-radius: 50%;
  margin-top: 50rpx;
}

.userinfo-nickname {
  color: #aaa;
  margin-top: 50rpx;
}

.login {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 100rpx;
  width: 90%;
}

.login-item {
  width: 100%;
  height: 100rpx;
  margin-top: 30rpx;
}

.login-local {
  width: 100%;
  background-color: salmon;
}

.login-scan {
  width: 100%;
  background-color: seagreen;
}

.login-new {
  width: 100%;
  background-color: slategray;
}

.foot {
  display: inline-block;
  position: fixed;
  bottom: 0;
  margin-bottom: 30rpx;
  font-size: 14px;
  color: slategray;
}
</style>
<template>
  <view class="container">
    <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>
    <view class="login">
      <view class="login-item">
        <button type="primary" disabled="{{disabled}}" @tap="loginLocal()" >本地账户</button>
      </view>
       <view class="login-item">
        <button type="primary" @tap="loginNep()">扫码登陆</button>
      </view>
       <view class="login-item" >
        <button type="primary" @tap="loginCreate()">新建账户</button>
      </view>
    </view>
    <text class="foot">
      敬告：账户数据不上传服务器，请做好备份
    </text>
   
  </view>

</template>

<script>
import wepy from 'wepy';
import { USER_INFO, LOCAL_WALLET } from '../utils/constant';
export default class Login extends wepy.page {
  config = {
    navigationBarTitleText: '登陆'
  };

  components = {};

  data = {
    userInfo: {
      nickName: ''
    },
    disabled: true
  };

  computed = {};

  methods = {
    loginCreate() {
      this.$redirect('./logincreate');
    },
    loginNep() {
      let that = this;
      wepy.scanCode({
        success: res => {
          // console.log(res);
          that.onScanLogin(res.result);
        },
        fail: res => {
          // console.log(res);
        }
      });
    },
    loginLocal() {
      console.log(this.disabled)
      if (this.disabled) return;
      else
      this.$redirect('./loginlocal');
    }
  };

  events = {};

  onLoad() {
    this.userInfo = wepy.getStorageSync(USER_INFO) || {};
    this.disabled = true;
    this.$apply();
  }
  onShow() {
    const wallets = wepy.getStorageSync(LOCAL_WALLET);
    if (wallets !== {} && wallets !== undefined && wallets !=='') this.disabled = false;
    this.$apply();
  }
  onScanLogin(nep2key) {
    this.$redirect('./loginnep2?nep2=' + nep2key);
  }
}
</script>
