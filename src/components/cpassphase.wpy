<style lang="less">
  .background {
    width: 100%;
    height: 100vh;
    position: absolute;
  }
  .upper-cover {
    width: 100%;
    height: 100%;
    opacity: 0.2;
    background-color: black;
  }
  .passphase-frame {
    position: absolute;
    bottom: -150px;
    width: 100%;
    height: 150px;
    background: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    input {
      font-family: PingFangSC-Medium;
      font-size: 14px;
      color: #333333;
      letter-spacing: 0;
      line-height: 14px;
      width: 690rpx;
      border-bottom: thin solid #a9a9a9;
      margin-left: 30rpx;
      margin-top: 50rpx;
      padding-left: 10rpx;
      margin-bottom: 30rpx;
    }
  }
</style>

<template>
  <view class="background" wx:if="{{show}}">
    <view class="upper-cover" @tap.stop="click"></view>
    <view class="passphase-frame" @tap.stop="click" animation="{{animation}}">
      <form bindsubmit="confirm" class="form" report-submit="true">
        <input placeholder='请输入密码' name="passphrase" value='test' />
        <view class="foot-button" style="margin-top:60rpx;margin-bottom:30rpx;">
          <button type="primary" form-type="submit" style="width:300rpx;" loading="{{opening}}" hover-class='btn_hover'>确定</button>
        </view>
      </form>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import Util from '../utils/index';
  export default class CPassphase extends wepy.component {
    props = {};
    components = {};
    data = {
      animation: {},
      label: '',
      show: false
    };
    methods = {
      click() {},
      async Show() {
        //  判断是否需要密码的工作交给组件来做
        if (Util.wallet.needPassphase()) {
          this.passAnimation();
        } else {
          await this.returnKey('0')
        }
      },
      async confirm(event) {
        console.log('confirm')
        let passphrase = event.detail.value.passphrase;
        await this.returnKey(passphrase, true)
      }
    };
    async returnKey(passphrase, havePass = false) {
      const prikey = await Util.wallet.getPrikey(passphrase);
      if (havePass) {
        console.log('havepass')
        this.passAnimation(150);
      }
      if (prikey !== null && prikey !== undefined && prikey !=='')
        this.$emit('deciphered', {
          'prikey': prikey
        });
      else
        this.$emit('deciphered', {
          'prikey': 'fail'
        });
    }
    onLoad() {};
    passAnimation(distance = -150, duration = 500) {

      var animation = wx.createAnimation({
        duration: duration
      });
      animation.translateY(distance).step({
        duration: duration
      });
      this.animation = animation.export();
      // 等待密码框回退之后背景才消失
      if (distance > 0) {
        let that = this;
        setTimeout(() => {
          that.show = !that.show;
          that.$apply();
        }, 500)
      } else {
        this.show = !this.show;
      }
       this.$apply();
    }
  }
</script>
