<style lang="less">
.area-uppper {
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.upper-balance {
  margin: 90rpx 0 90rpx 45rpx;
  display: flex;
  flex-direction: row;
}
.balance-label {
  color: white;
  font-size: 18px;
  font-family: '黑体';
}
.balance {
  margin-left: 10px;
  font-size: 20px;
  color: white;
  font-family: Helvetica, Arial, sans-serif;
}

.radio-group {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 90rpx 45rpx 90rpx 0;
  .radio {
    margin-left: 45rpx;
    text {
      color: white;
      font-size: 20px;
      font-family: Helvetica, Arial, sans-serif;
    }
  }
}
.area-medium {
  display: flex;
  flex-direction: column;
  margin-top: 30rpx;
  height: 377rpx;
  width: 700rpx;
  box-shadow: 10px 15px 20px rgba(100, 100, 100, 0.2);
  background-color: white;
  align-items: center;
  border-radius: 5px;
}
.medium-address {
  width: 620rpx;
  font-family: Helvetica, Arial, sans-serif;
  margin-top: 100rpx;
  .address {
    border-bottom: thin #cccccc solid;
    height: 57rpx;
    font-size: 16px;
    padding: 4px 0 4px 0;
    font-family: Arial, Helvetica, sans-serif;
  }
  .holder {
    color: #cccccc;
    font-family: '黑体';
  }
}
.medium-button {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  width: 620rpx;
  margin-top: 60rpx;
}
.button-item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .label {
    margin-top: 20rpx;
    font-size: 16px;
    color: #27adf1;
    font-family: '黑体';
  }
}
.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-top: 55rpx;
}

.lower-amount {
  width: 660rpx;
  height: 95rpx;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background-color: white;
  border-radius: 5px;
  align-items: center;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
  .content {
    font-size: 16px;
    padding: 0 0 0 45rpx;
    color: #a3a3a3;
  }
  .holder {
    color: #cccccc;
  }
}
.lower-passphrase {
  width: 660rpx;
  height: 95rpx;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background-color: white;
  margin-top: 55rpx;
  border-radius: 5px;
  align-items: center;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
  .content {
    font-size: 16px;
    padding: 0 0 0 45rpx;
    font-family: '黑体';
    color: #a3a3a3;
  }
  .holder {
    color: #cccccc;
  }
}
.area-btn {
  margin-top: 100rpx;
  width: 80%;
  font-size: 16px;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
  button::after {
    border: none;
  }
}
</style>
<template>
  <form bindsubmit="formSubmit" class="form" report-submit ="true">
    <view class="container">
      <view class="area-uppper">
        <view class="upper-balance">
          <text class="balance-label">余额:</text>
          <text class="balance">{{balance}}</text>
        </view>
        <radio-group class="radio-group" bindchange="radioChange">
          <label class="radio" wx:for="{{assets}}">
            <radio value="{{item.name}}" checked="{{item.checked}}"/>
            <text>{{item.value}}</text>
          </label>
        </radio-group>
      </view>
      <view class="area-medium">
        <view class="medium-address">
          <input class="address" name="address" placeholder-class="holder" placeholder="付款地址" value='{{targetAddr}}'/>
        </view>
        <view class="medium-button">
          <view class="button-item" >
            <image src="../images/address.png" class="icon"></image>
            <text class="label">输入地址</text>
          </view>
          <view class="button-item"  @tap="OnScan()">
            <image src="../images/scanPay.png" class="icon"></image>
            <text class="label" style="color:#a3a3a3;">扫二维码</text>
          </view>
        </view>
      </view>
      <view class="area-lower">
        <view class="lower-amount">
          <input name="amount" placeholder="金额" class="content" placeholder-class="holder" type="{{checked==='GAS'?'digit':'number'}}" value='{{amount}}'/>
        </view>
        <view class="lower-passphrase" wx:if="{{hidePW ==='false'}}">
          <input placeholder="密码" class="content" password='true' placeholder-class="holder" name="passphrase" value='{{password}}'/>
        </view>
      </view>
      <view class="area-btn">
        <button type="primary" style="background-color:#69c0fd;" formType="submit">确认</button>
      </view>
    </view>
  </form>
</template>
<script>
import wepy from 'wepy';
import {Helper,ThinNeo,Neo} from '../lib/neo-ts/index';
import {Util} from '../utils/index';
export default class Send extends wepy.page {
  config = {
    navigationBarTitleText: '转账'
  };

  components = {};

  data = {
    targetAddr: '',
    assets: [
      { name: 'NEO', value: 'NEO' },
      { name: 'GAS', value: 'GAS', checked: 'true' }
    ],
    balance: '0.0000',
    checked: 'GAS',
    amount: '',
    password: '',
    hidePW: 'false'
  };

  computed = {};

  methods = {
    OnScan() {
      let that = this;
      wepy.scanCode({
        success: res => {
          console.log(res);
          that.targetAddr = res.result;
          that.$apply();
        },
        fail: res => {
          console.log(res);
        }
      });
    },
    radioChange(e) {
      this.checked = e.detail.value;
      this.balance = UTXO.balance[e.detail.value].amount;
      this.amount = '';
      this.$apply();
    },
    async formSubmit(e) {
      const that = this;
      let target = e.detail.value.address;
      let amount = e.detail.value.amount;
      let password = e.detail.value.passphrase;
      TransactionTool.formId.push(e.detail.formId);
      if (target.length !== 34) {
        tip.alert('目标地址有误');
        return;
      }
      if (parseFloat(amount) > parseFloat(UTXO.balance[this.checked].amount)) {
        tip.alert('余额不足');
        return;
      }
      if (password.length <= 0 && that.hidePW === 'false') {
        tip.alert('请输入密码');
        return;
      }

      this.amount = amount;
      this.hiddenmodalput = false;
      this.password = password;
      this.$apply();
      this.OnSend();
    }
  };

  events = {};

  onLoad() {
    try {
      this.balance = UTXO.balance['GAS'].amount;
      this.$apply();
    } catch (err) {
      console.log(err);
    }
  }
  onReady() {
    const that = this;
    if (Wallet.account.nep2key.length === 64) {
      that.hidePW = 'true';
      that.$apply();
    }
  }
  //构造并发送交易
  async OnSend() {
    let that = this;
    wepy.showLoading({ title: '密码验证中' });

    //如果当前账户直接使用私钥
    if (Wallet.account.nep2key.length === 64) {
      //构造并发送交易
      that.SendTran(Wallet.account.nep2key, Wallet.account.publickey);
      return;
    }
    Wallet.decode(this.password, async (code, prikey, pubkey) => {
      wepy.hideLoading();
      if (code < 0) {
        tip.error('密码错误');
        return;
      }
      //构造并发送交易
      that.SendTran(prikey, pubkey);
    });
  }
  async SendTran(prikey, pubkey) {
    pubkey = Helper.hexToBytes(pubkey);
    var count = Neo.Fixed8.parse(this.amount + '');
    let coin = this.checked === 'GAS' ? CoinTool.id_GAS : CoinTool.id_NEO;
    wepy.showLoading({ title: '交易生成中' });
    var tran = CoinTool.makeTran(UTXO.assets, this.targetAddr, coin, count);
    let randomStr = await Random.getSecureRandom(256);
    wepy.showLoading({ title: '获取交易编号' });
    const txid = await TransactionTool.setTran(tran, prikey, pubkey, randomStr);
    wepy.hideLoading();
    if (txid === 'failed') {
      wepy.showModal({
        title: '提示',
        content: '交易失败',
        showCancel: false,
        success: async function(res) {
          if (res.confirm) {
            console.log('用户点击确定');
          }
        }
      });
    } else {
      TransactionTool.unconfirmed.push(txid);
      wepy.showModal({
        title: '交易发送成功',
        content: txid,
        success: async function(res) {
          if (res.confirm) {
            console.log('用户点击确定');
            wx.navigateBack();
          }
        }
      });
    }
  }
}
</script>
