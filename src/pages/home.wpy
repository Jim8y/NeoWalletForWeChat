 <style lang="less">
.area-uppper {
  height: 450rpx;
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upper-asset {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 0 0 0 0;
}
.asset-item {
  width: 375rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
  .title {
    margin-top: 45rpx;
    font-size: 18px;
    color: white;
  }
  .number {
    font-size: 34px;
    margin-top: 45rpx;
    color: white;
  }
  .totle {
    font-size: 12px;
    font-weight: lighter;
    margin: 45rpx 0 0 0;
    color: white;
  }
}

.area-medium {
  display: flex;
  flex-direction: row;
  top: 0;
  margin-top: -70rpx;
  height: 197rpx;
  width: 700rpx;
  box-shadow: 2px 8px 10px #999;
  background-color: white;
  border-radius: 5px;
  justify-content: space-between;
}
.medium-item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .name {
    margin-top: 20rpx;
    font-size: 13px;
    color: #27adf1;
  }
}

.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.lower-chain {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 86%;
  margin-top: 70rpx;

  .label {
    font-size: 13px;
    color: #a3a3a3;
  }
  .height {
    color: #a3a3a3;
    font-size: 13px;
  }
}

.lower-price {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 36rpx;
}
.price-item {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 660rpx;
  height: 95rpx;
  margin-top: 28rpx;
  border-radius: 5px;
  background-color: white;
    box-shadow: 2px 4px 6px #bbb;
  .label {
    font-size: 13px;
    color: #a3a3a3;
    margin-left: 50rpx;
  }
  .price {
    width: 200rpx;
    height: 100%;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    text {
      color: #27adf1;
      font-size: 13px;
    }
  }
}
</style>
<template>
  <view class="container">
    <view class="area-uppper">
      <view class="upper-asset">
        <view class="asset-item">
          <text class = "title">NEO</text>
          <text class="number">{{NEO}}</text>
          <text class="totle">￥{{NEOValue}}</text>
        </view>
        <view class="asset-item">
          <text class = "title">GAS</text>
          <text class="number">{{GAS}}</text>
          <text class="totle">￥{{GASValue}}</text>
        </view>
      </view>
    </view>
    <view class="area-medium">
       <view class="medium-item" style="margin-left:20px;" @tap="navigate('receive')">
          <image src="../images/receive.png" class="icon"></image>
          <text class="name">Receive</text>
        </view>
        <view class="medium-item" @tap="navigate('send')">
            <image src="../images/send.png" class="icon"></image>
          <text class="name">Send</text>
        </view>
        <view class="medium-item"  @tap="navigate('history')">
          <image src="../images/history.png" class="icon"></image>
          <text class="name">History</text>
        </view>
        <view class="medium-item"  style="margin-right:20px;" @tap="navigate('mine')">
          <image src="../images/account.png" class="icon"></image>
          <text class="name">Mine</text>
        </view>
    </view>
    <view class="area-lower">
     <view class="lower-chain">
        <text class="label">Block Height:</text>
        <text class="height">{{Block}}</text>
      </view>
      <view class="lower-price">
        <view class="price-item">
          <text class="label">NEO</text>
          <view class="price">
            <text  style="color:{{PN?'green':'red'}};">￥{{NEOPrice}}</text>
          </view>
        </view>
        <view class="price-item">
          <text class="label">GAS</text>
          <view class="price">
            <text  style="color:{{PG?'green':'red'}};">￥{{GASPrice}}</text>
          </view>
        </view>
        <view class="price-item">
          <text class="label">BitCoin</text>
          <view class="price">
            <text style="color:{{PB?'green':'red'}};">￥{{BitCoinPrice}}</text>
          </view>
        </view>
      </view>
    </view>
  </view>

</template>

<script>
import wepy from 'wepy';
import { CURR_WALLET } from '../utils/constant';
import { WWW } from '../utils/API';
import { CoinTool } from '../utils/Coin';
import { UTXO } from '../utils/UTXO';
import { WalletHelper } from '../utils/wallet';
import tip from '../utils/tip';
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: 'NEO Wallet'
  };

  components = {};

  data = {
    wallet: {},
    NEO: '0',
    GAS: '0',
    NEOPrice: 0.0,
    GASPrice: 0.0,
    BitCoinPrice: 0.0,
    NEOValue: '0',
    GASValue: '0',
    Block: '1',
    PN: true,
    PG: true,
    PB: true,
    isLogin: false
  };

  computed = {};

  methods = {
    navigate(page) {
      if (WalletHelper.wallet === null) {
        if (page === 'mine') {
          wepy.navigateTo({
            url: '/pages/login'
          });
        } else tip.error('您尚未登陆钱包账户');
        return;
      } else {
        wepy.navigateTo({
          url: '/pages/' + page
        });
      }
    }
  };

  events = {};

  async onLoad() {
    const that = this;
  }
  onShow() {
    this.OnGetPrice();
    this.OnLogin();
    CoinTool.initAllAsset();
  }
  async OnLogin() {
    let that = this;
    this.wallet = wepy.getStorageSync(CURR_WALLET);
    this.$apply();
    // console.log(this.wallet);
    //本地缓存有账户 则直接加载本地账户信息
    if (
      this.wallet !== null &&
      this.wallet !== undefined &&
      this.wallet !== ''
    ) {
      this.isLogin = true;
      this.wallet = this.wallet['accounts'][0];
      WalletHelper.wallet = this.wallet;
      this.$apply();
    }
    await this.OnTimeOut();
    //循环执行代码
    setInterval(async () => {
      await that.OnTimeOut();
    }, 15000); //循环时间 这里是15秒
  }
  /**
   * 定时触发
   */
  async OnTimeOut() {
    if (WWW.rpc === '') {
      WWW.rpc = await WWW.rpc_getURL();
    }
    if (WalletHelper.wallet !== null) {
      const addr = WalletHelper.wallet.address;
      this.OnGetAssets(addr);
    }
    this.OnGetHeight();
  }

  /**
   * 加载区块链高度
   */
  async OnGetHeight() {
    const height = await WWW.api_getHeight();
    // console.log(height);
    this.Block = height;
    WalletHelper.height = height;
    this.$apply();
  }
  /**
   * 获取账户资产信息 UTXO
   */
  async OnGetAssets(addr) {
    // console.log(addr);
    await UTXO.GetAssets(addr);
    let neo = 0;
    let gas = 0;

    for (let item of UTXO.utxo) {
      if (item.asset === 'NEO') neo = parseInt(item.count) + parseInt(neo);
      else gas = parseFloat(item.count) + parseFloat(gas);
    }
    this.NEO = neo;
    this.GAS = gas.toFixed(4);
    UTXO.balance = {
      NEO: neo,
      GAS: gas
    };
    UTXO.utxo.reverse();
    this.$apply();
    // console.log(UTXO.assets);
    this.OnTotalValue();
  }
  /**
   * 获取市场价格
   */
  async OnGetPrice() {
    const coins = await WWW.api_getCoinPrice();
    console.log(coins);
    this.NEOPrice = parseFloat(coins['NEO'][0]['price_cny']).toFixed(2);
    this.GASPrice = parseFloat(coins['GAS'][0]['price_cny']).toFixed(2);
    this.BitCoinPrice = parseFloat(coins['BitCoin'][0]['price_cny']).toFixed(2);
    let priceChange = {};
    if (coins['NEO'][0]['percent_change_1h'][0] !== '-') this.PN = true;
    else this.PN = false;

    if (coins['GAS'][0]['percent_change_1h'][0] !== '-') this.PG = true;
    else this.PG = false;

    if (coins['BitCoin'][0]['percent_change_1h'][0] !== '-') this.PB = true;
    else this.PB = false;
    this.$apply();
    this.OnTotalValue();
  }
  /**
   * 计算等价法币资产
   */
  OnTotalValue() {
    let gasAsset = parseFloat(this.GASPrice) * parseFloat(this.GAS);
    let neoAsset = parseFloat(this.NEOPrice) * parseFloat(this.NEO);
    this.NEOValue = neoAsset.toFixed(2);
    this.GASValue = gasAsset.toFixed(2);
    this.$apply();
    // console.log(neoAsset.toFixed(2));
  }
}
</script>
 