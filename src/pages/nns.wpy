<style lang="less">

    .value-cgas {
      height: 160rpx;
      width: 100%;
      padding-left: 60rpx;
      display: flex;
      flex-direction: row;
      align-items: center;
      background-color:white;
    }

  .area-function {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    .nav {
      margin-top: 1rpx;
      display: flex;
      flex-direction: row;
      align-items: center;
      width: 100%;
      flex-wrap: wrap; // justify-content: space-between;
      // height: 160rpx;
      background-color: white;
    }
  }
  .area-bid {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    margin-top: 20rpx;
    background-color: white;

    .search {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      height: 160rpx;
      justify-content: center;
      background-color: white;
      margin-top: 1rpx;
      .text {
        display: flex;
        flex-direction: row;
        align-items: center;
        width: 100%;
        .input {
          width: 602rpx;
          border-bottom: thin solid #a9a9a9;
          margin-left: 30rpx;
        }
        .domain {
          margin-left: 20rpx;
          margin-right: 30rpx;
          font-family: PingFangSC-Medium;
          font-size: 14px;
          color: #333333;
          letter-spacing: 0;
          line-height: 14px;
        }
      }
      .loading {
        width: 100%;
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        image {
          width: 29rpx;
          height: 29rpx;
          margin-left: 30rpx;
          margin-top: 10rpx;
        }
        text {
          margin-left: 10rpx;
          margin-top: 10rpx;
          font-family: PingFangSC-Regular;
          font-size: 12px;
          color: #a9a9a9;
          letter-spacing: 0;
          line-height: 12px;
          font-weight: 10;
        }
      }
    }
  }
  .btn::after {
    border: none;
  }
</style>
<template>
  <view class="container">
    <scroll-view scroll-y class="scroll">
      <view class="inner">
        <view class="area-function" style="margin-bottom:20rpx;">
          <view class="function-title">
            <text class="text">常用功能</text>
            <text class="text" style="color:#22A4FF;" @tap="OnInstruction()">竞拍教程</text>
          </view>
          <view class="nav">
            <cnnsfunctiona />
            <cnnsfunctionb />
            <cnnsfunctionc />
            <cnnsfunctiond />
            <cnnsfunctione />
            <cnnsfunctionf />
          </view>
        </view>
        <clbidaccount @onEmit.user="handleEmit" />
        <view class="value-cgas">
         CGAS {{cgasValue}}
        </view>
        <view class="area-bid">
          <view class="function-title" >
            <text class="text">NNS域名拍卖</text>
          </view>
          <form bindsubmit="confirm">
            <view class="search">
              <view class="text">
                <input name="domain" class="input" confirm-type="done" bindconfirm="confirm" bindinput="domaininput" value='kkk' />
                <text class="domain">.{{root}}</text>
              </view>
              <view class="loading">
                <image class="icon" src="../images/{{loadingIcon}}.png" animation="{{animationData}}" />
                <text>{{alert}}</text>
              </view>
            </view>
          </form>
          <view class="foot-button" style='margin-top:30rpx;margin-bottom:50rpx;' wx:if="{{btn.show}}">
            <button type="primary" form-type="submit" @tap="startAuction" loading="{{opening}}" hover-class='btn_hover'>{{btn.label}}</button>
          </view>
        </view>
      </view>
    </scroll-view>
    <cpassphase @deciphered.user="deciphered" />
  </view>
</template>

<script>
  import wepy from 'wepy';
  import Util from '../utils/index';
  import {
    DomainState
  } from '../utils/entity';
  import CPassphase from '../components/cpassphase';
  import CNNSFunction from '../components/nns/cnnsfunction';
  import CLabel from '../components/clabel';
  export default class NNS extends wepy.page {
    config = {
      navigationBarTitleText: 'NNS'
    };
    components = {
      cpassphase: CPassphase,
      clbidaccount: CLabel,
      cnnsfunctiona: CNNSFunction,
      cnnsfunctionb: CNNSFunction,
      cnnsfunctionc: CNNSFunction,
      cnnsfunctiond: CNNSFunction,
      cnnsfunctione: CNNSFunction,
      cnnsfunctionf: CNNSFunction
    };
    data = {
      animationData: {},
      domainInfo: {},
      root: 'neo',
      cgasValue: '0.0000000',
      // domain: ''
      btn: {
        show: false,
        label: '开标'
      },
      nnsloading: false,
      alert: '', //域名状态提示语句
      loadingIcon: 'Loading', //检查域名状态图标
      opening: false, //开标等按钮加载
      functions: [{
          url: './gas2cgas',
          img: '../images/N_G2S.png',
          label: '兑换CGAS'
        },
        {
          url: './gas2cgas',
          img: '../images/N_bid.png',
          label: '我的竞拍'
        },
        {
          url: './gas2cgas',
          img: '../images/N_domain.png',
          label: '域名管理'
        },
        {
          url: './gas2CGAS',
          img: '../images/N_bonus.png',
          label: '我的分红'
        },
        {
          url: './gas2CGAS',
          img: '../images/N_record.png',
          label: '操作记录'
        },
        {
          url: './gas2CGAS',
          img: '../images/N_message.png',
          label: '竞拍消息'
        }
      ]
    };
    computed = {};
    methods = {
      async confirm(event) {
        const domain = event.detail.value; //this.domain;
        console.log(domain);
        this.nnsloading = true;
        this.$apply();
        let domainInfo = await Util.get.domainState(domain);
        console.log(domainInfo)
        domainInfo.domain = domain;
        this.nnsloading = false;
        this.domainInfo = domainInfo;
        this.$apply();
        this.processDomainState(domainInfo);
        // Util.get.addrByDomain('jinghui.test');
      },
      domaininput(event) {
        if (this.loadingIcon !== 'Loading') {
          this.loadingIcon = 'Loading';
          this.alert = '';
          this.btn = {
            show: false,
            label: '开拍'
          };
          this.$apply();
        }
      },
      startAuction(e) {
        this.$invoke('cpassphase', 'Show');
      },
      deciphered(e) {
        // 密钥解析成功之后再进行具体操作
        let prikey = e.prikey;
        console.log('prikey = ' + prikey)
        if (prikey === 'fail' || prikey === null || prikey === '') {
          Util.show.error('密码错误');
        } else if (this.domainInfo.state === DomainState.open) { //开拍
          this.OpenAuction(this.domainInfo.domain);
        } else {
          //加价/参与竞拍
          wepy.navigateTo({
            url: './auction?domain=' + this.domainInfo.domain
          });
        }
      },
      OnInstruction() {
        // Go to the instruction page
        console.log('This button should go to the instruction page. To do')
      },
      handleEmit(param) {
        let that = this;
        // console.log(param);
        switch (param) {
          case 'refund':
            that.OnScan();
            break;
          case 'recharge':
            that.OnScan();
            break;
          default:
            break;
        }
      }
    };
    events = {};
    async onLoad() {
      this.root = Util.const.DOMAIN_ROOT;
      this.OnLoading();
      this.$apply();
    }
    async onShow() {
      this.LoadFunction();
    }
    // 页面渲染完成
    async onReady() {}
    onShareAppMessage() {
      return {
        title: 'NNS',
        path: '/pages/nns'
      };
    }
    // 加载图标旋转
    OnLoading() {
      let that = this;
      let animation = wx.createAnimation({
        duration: 1500,
        timingFunction: 'ease'
      });
      var n = 0;
      setInterval(
        function() {
          if (!that.nnsloading) {
            return;
          }
          n = n + 1;
          animation.rotate(360 * n).step();
          that.animationData = animation.export();
          that.$apply();
        }.bind(this),
        800
      );
    }
    /**
     * 解析域名状态
     */
    processDomainState(domainInfo) {
      switch (domainInfo.state) {
        case DomainState.end1:
        case DomainState.end2:
          this.loadingIcon = 'N_error';
          this.alert = '该域名已经被别人拥有啦';
          break;
        case DomainState.fixed:
        case DomainState.random:
          this.loadingIcon = 'N_avaliable';
          this.alert = '该域名正在进行竞拍';
          this.btn = {
            show: true,
            label: '参与竞拍'
          };
          break;
        case DomainState.open:
        case DomainState.pass:
          this.loadingIcon = 'N_avaliable';
          this.alert = '该域名可以使用';
          this.btn = {
            show: true,
            label: '开拍'
          };
          break;
        case DomainState.invalid:
          this.loadingIcon = 'N_error';
          this.alert = '该域名格式错误';
          break;
        default:
          break;
      }
      this.$apply();
    }
    async OpenAuction(domain) {
      this.opening = true;
      this.$apply();
      let res = await Util.auction.wantbuy(domain);
      this.opening = false;
      this.$apply();
      //交易发送成功
      if (res !== null && res !== '' && res !== 'failed') {
        //0x9a599518589cf5b5bd93a030e0157f4657757f676808294c3fd42859b6e209b6
        wepy.navigateTo({
          url: './nnsloading?txid=' + res + '&type=0'
        });
      }
    }
    LoadFunction() {
      this.$invoke('cnnsfunctiona', 'Show', JSON.stringify(this.functions[0]));
      this.$invoke('cnnsfunctionb', 'Show', JSON.stringify(this.functions[1]));
      this.$invoke('cnnsfunctionc', 'Show', JSON.stringify(this.functions[2]));
      this.$invoke('cnnsfunctiond', 'Show', JSON.stringify(this.functions[3]));
      this.$invoke('cnnsfunctione', 'Show', JSON.stringify(this.functions[4]));
      this.$invoke('cnnsfunctionf', 'Show', JSON.stringify(this.functions[5]));
      this.$invoke(
        'clbidaccount',
        'Show',
        JSON.stringify({
          title: '竞拍账户',
          show: {
            refund: 1,
            recharge: 1
          }
        })
      );
    }
  }
</script>
 