 <style lang="less">

 .scroll {
  width: 100%;
  height: 100%;
}
.inner {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-bottom: 200rpx;
}

.area-uppper {
  height: 450rpx;
  width: 100%;
  background: linear-gradient(to right, #69c0fd, #a6a4fd);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upper-asset {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: 0 0 0 0;
}
.asset-item {
  width: 375rpx;
  display: flex;
  flex-direction: column;
  align-items: center;
  .title {
    margin-top: 45rpx;
    font-size: 18px;
    color: white;
    font-family: Helvetica, Arial, sans-serif;
  }
  .number {
    font-size: 34px;
    margin-top: 45rpx;
    color: white;
    font-family: Helvetica, Arial, sans-serif;
  }
  .totle {
    font-size: 12px;
    font-weight: lighter;
    margin: 45rpx 0 0 0;
    color: white;
    font-family: Helvetica, Arial, sans-serif;
  }
}

.area-medium {
  display: flex;
  flex-direction: row;
  top: 0;
  margin-top: -70rpx;
  height: 197rpx;
  width: 700rpx;
  box-shadow: 10px 15px 20px rgba(100, 100, 100, 0.2);
  background-color: white;
  border-radius: 5px;
  justify-content: space-between;
}
.medium-item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .icon {
    width: 60rpx;
    height: 60rpx;
  }
  .name {
    margin-top: 20rpx;
    font-size: 13px;
    color: #27adf1;
    font-family: Helvetica, Arial, sans-serif;
  }
}

.area-lower {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.lower-chain {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 86%;
  margin-top: 70rpx;

  .label {
    font-size: 13px;
    color: #a3a3a3;
    font-family: Helvetica, Arial, sans-serif;
  }
  .height {
    color: #a3a3a3;
    font-size: 13px;
    font-family: Helvetica, Arial, sans-serif;
  }
}

.lower-price {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 36rpx;
}
.price-block {
  width: 660rpx;
  display: block;
}
.price-content {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 660rpx;
  height: 95rpx;
  margin-top: 28rpx;
  border-radius: 5px;
  background-color: white;
  box-shadow: 2px 2px 20px rgba(130, 130, 130, 0.2);
  .label {
    font-size: 13px;
    color: #a3a3a3;
    margin-left: 50rpx;
    font-family: Helvetica, Arial, sans-serif;
  }
  .price {
    width: 200rpx;
    height: 100%;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    text {
      color: #27adf1;
      font-size: 13px;
      font-family: Helvetica, Arial, sans-serif;
    }
  }
}
</style>
<template>
  <view class="container">
          <scroll-view scroll-y class="scroll">
         <view class="inner">
    <view class="area-uppper">
      <view class="upper-asset">
        <view class="asset-item">
          <text class = "title">NEO</text>
          <text class="number">{{assets['NEO'].amount}}</text>
          <text class="totle">￥{{assets['NEO'].total}}</text>
        </view>
        <view class="asset-item">
          <text class = "title">GAS</text>
          <text class="number">{{assets['GAS'].amount}}</text>
          <text class="totle">￥{{assets['GAS'].total}}</text>
        </view>
      </view>
    </view>
    <view class="area-medium">
       <view class="medium-item" style="margin-left:20px;" @tap="navigate('receive')">
          <image src="../images/receive.png" class="icon"></image>
          <text class="name">收款</text>
        </view>
        <view class="medium-item" @tap="navigate('send')">
            <image src="../images/send.png" class="icon"></image>
          <text class="name">转账</text>
        </view>
        <view class="medium-item"  @tap="navigate('history')">
          <image src="../images/history.png" class="icon"></image>
          <text class="name">历史</text>
        </view>
        <view class="medium-item"  style="margin-right:20px;" @tap="navigate('mine')">
          <image src="../images/account.png" class="icon"></image>
          <text class="name">个人</text>
        </view>
    </view>
    <view class="area-lower">
     <view class="lower-chain">
        <text class="label">区高度:</text>
        <text class="height">{{Block}}</text>
      </view>
      <view class="lower-price">
        <view class="asset-block" wx:for="{{assets}}" >
          <view class="price-content">
            <text class="label">{{item.type}}</text>
            <view class="price">
              <text  style="color:{{item.rise?'#45d68a':'#f67581'}};">￥{{item.price}}</text>
            </view>
          </view>
        </view>
      </view>
    </view>
    </view>
  </scroll-view>
  </view>

</template>

<script>
import wepy from 'wepy';
import { CURR_WALLET } from '../utils/constant';
import { CoinTool } from '../utils/Coin';
import { Wallet } from '../utils/wallet';
import { Service } from '../utils/service';
import tip from '../utils/tip';
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: '首页'
  };

  components = {};

  data = {
    assets: {
      NEO: {
        amount: 0,
        price: 0,
        total: 0,
        type: 'NEO'
      },
      GAS: {
        amount: 0,
        price: 0,
        total: 0,
        type: 'GAS'
      }
    },
    Block: '1',
    isLogin: false
  };

  computed = {};

  methods = {
    navigate(page) {
      if (Wallet.account === null) {
        if (page === 'mine') {
          wepy.navigateTo({
            url: '/pages/index?switch=' + 0
          });
        } else tip.error('您尚未登陆钱包账户');
        return;
      } else {
        wepy.navigateTo({
          url: '/pages/' + page
        });
      }
    }
  };

  events = {};

  onLoad() {
    Service.init();
  }
  async onShow() {
    await CoinTool.initAllAsset();
    Service.OnGetHeight();
    this.OnLogin();
  }

  async OnLogin() {
    let that = this;
    const wallet = wepy.getStorageSync(CURR_WALLET) || {};
    console.log(Object.keys(wallet).length);

    //本地缓存有账户 则直接加载本地账户信息
    if (Object.keys(wallet).length !== 0) {
      this.isLogin = true;
      this.$apply();
      Wallet.setWallet(wallet);
    }

    //初始化
    Service.init(Wallet.account.address);

    //设置资产更新回调
    Service.assetDelegate = function(assets) {
      assets['GAS'].amount = parseFloat(assets['GAS'].amount).toFixed(4);
      that.assets = assets;
      that.Block = Wallet.height;
      that.$apply();
    };

    //加载资产
    Service.OnTimeOut();
  }
}
</script>
 