<style lang="less">
  .row-state {
    display: flex;
    flex-direction: row;
    width: 100%;
    align-items: center;
    background-color: white;
    height: 104rpx;
    margin-top: 2rpx;
    justify-content: space-between;
    .label {
      font-family: PingFangSC-Regular;
      font-size: 12px;
      color: #9a9a9a;
      letter-spacing: 0;
      line-height: 12px;
      margin-left: 30rpx;
      align-content: center;
    }
    .right {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      margin-right: 30rpx;
      .content {
        display: flex;
        flex-direction: row;
        align-items: flex-end;
        .upper {
          font-family: PingFangSC-Medium;
          font-size: 12px;
          color: #333333;
          letter-spacing: 0;
          text-align: right;
          line-height: 12px;
          margin-top: 36rpx;
        }
        .lower {
          font-family: PingFangSC-Regular;
          font-size: 10px;
          color: #9A9A9A;
          letter-spacing: 0;
          text-align: right;
          line-height: 10px;
          margin-top: 10rpx;
        }
      }
    }
  }
  .row-domain {
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
    background-color: white;
    height: 104rpx;
    margin-top: 1rpx;
    justify-content: space-between;
    .domain {
      margin-top: 40rpx;
      margin-bottom: 40rpx;
      font-family: PingFangSC-Medium;
      font-size: 14px;
      color: #333333;
      letter-spacing: 0;
      line-height: 14px;
    }
  }
  .bid-btn {
    position: absolute;
    bottom: 0;
    height: 88rpx;
    width: 100%;
    background-color: #22A4FF;
    display: flex;
    flex-direction: column;
    align-items: center;
    text {
      font-family: PingFangSC-Medium;
      font-size: 12px;
      color: #FFFFFF;
      letter-spacing: 0;
      text-align: center;
      line-height: 80rpx;
      justify-content: space-around;
    }
  }
</style>
<template>
  <view class="container">
    <scroll-view scroll-y class="scroll">
      <view class="inner">
        <view class="row-state" style="border-top:thin solid #bbbbbb;">
          <view class="label">
            域名竞拍
          </view>
          <view class="right">
            <view class="content">
              <text class="upper">状态：</text>
              <text class="upper"></text>
            </view>
            <view class="content">
              <text class="lower">剩余时间</text>
              <text class="lower"></text>
            </view>
          </view>
        </view>
        <view class="row-domain">
          <text class="domain">{{domain}}</text>
        </view>
        <view class="row-state" style="margin-top:20rpx;">
          <view class="label">
            最新出价
          </view>
          <view class="right">
            <view class="content">
              <text class="upper" decode>当前最高价:</text>
              <text class="upper" style="color:red;">9</text>
              <text class="upper" decode>CGAS</text>
            </view>
            <view class="content">
              <text class="lower" decode>我的当前出价总和:</text>
              <text class="lower" style="color:red;"> 8 </text>
              <text class="lower" decode>CGAS</text>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
    <view class="bid-btn" @tap="onBid()">
      <text>出价</text>
    </view>
    <cpassphase @deciphered.user="deciphered" />
    <cbid @bid.user="addPrice" />
  </view>
</template>

<script>
  import wepy from 'wepy';
  import Util from '../utils/index';
  import CPassphase from '../components/cpassphase';
  import CBid from '../components/cbid';
  export default class Auction extends wepy.page {
    config = {
      navigationBarTitleText: '域名竞拍'
    };
    components = {
      cpassphase: CPassphase,
      cbid: CBid
    };
    data = {
      domain: '',
      bidInfo: []
    };
    computed = {};
    methods = {
      onBid() {
        // 加价弹框
        this.$invoke('cbid', 'Show');
      },
      deciphered(e) {
        // 密钥解析成功之后再进行具体操作
        let prikey = e.prikey;
        console.log('prikey = ' + prikey)
        if (prikey === 'fail' || prikey === null || prikey === '') {
          Util.show.error('密码错误');
          return;
        }
        // 加价

        
      },
      addPrice(e) {
        this.$invoke('cpassphase', 'Show');
      }
    };
    events = {};
    async onLoad(option) {
      this.bidInfo = await Util.get.bidInfo('kkk.neo') //(option.domain);
      this.domain = 'kkk.neo' //option.domain;
      this.$apply();
      console.log('auction.wpy')
      console.log(this.bidInfo);
    }
    onShow() {}
    // 页面渲染完成
    async onReady() {}
  }
</script>
 